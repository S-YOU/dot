#!/usr/bin/env ruby
# 対話的に
# 2進数、8進数、10進数、16進数を
# 変換表示するスクリプト
#
# IPアドレスを10進数形式とHexを変換する
#puts conv.convert("10.4.1.137")
#puts conv.convert("0a 04 01 89")

$input_base = 10

def show_prompt
  if $stdin.isatty
    print "base #{$input_base}> "
  end
  $stdout.flush
end

def print_help
  puts "baseconv [2|8|10|16]"
  puts "    標準入力から数字を読み込んで16進数、10進数、8進数、2進数に変換する"
  puts "    set 16  : 入力を16進数として解釈します"
  puts "    set 10  : 入力を10進数として解釈します"
  puts "    set 8   : 入力を8進数として解釈します"
  puts "    set 2   : 入力を2進数として解釈します"
  puts "    hex     : 0～255の10進-16進対応表を表示します"
end

# 0～255の10進-16進対応表を表示します
def hex
  (0...32).each do |i|
    (0...8).each do |j|
      n = 32 * j + i
      printf("%02x(%3d)   ", n, n)
    end
    puts
  end
end

ARGV.each do |arg|
  case arg
  when '16'
    $input_base = 16
  when '10'
    $input_base = 10
  when '8'
    $input_base = 8
  when '2'
    $input_base = 2
  else
    print_help()
    exit(1)
  end
end

if $stdin.isatty
  print_help()
  show_prompt()
end

while line = $stdin.gets
  line.chomp!

  if line =~ /set\s+(\d+)/
    $input_base = $1.to_i
    show_prompt()
    next
  end
  if line.strip == "hex"
    hex
    show_prompt()
    next
  end

  buf = []

  while m = /([0-9A-Fa-f]+)/.match(line)
    pre = m.pre_match
    line = m.post_match
    match = $1

    decimal = match.to_i($input_base)

    buf << [pre, decimal]
  end

  out_formats = {
    16 => "%02x",
    10 => "%d",
    8 => "%o",
    2 => "%08b",
  }

  out_formats.each do |out_base, format|
    buf.each do |obj|
      pre     = obj[0]
      decimal = obj[1]

      print pre
      converted = sprintf(format, decimal)
      print converted
    end
    print " (#{out_base})"
    puts
  end

  show_prompt()
end
