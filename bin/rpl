#!/usr/bin/ruby

require "optparse"

USAGE = <<EOF
Usage: rpl <from> <to> [files...]
EOF

# 複数ファイルから文字列を検索・置換するスクリプト
#
# - ファイル名が指定されなかった場合はgit ls-filesを対象とする
# - 通常ファイルでなければスキップする
# - 変更がないファイルはタイムスタンプを変えない

def rpl(filename, from, to)
  unless File.ftype(filename) == "file"
    puts "Skip #{file}    (not regular file)"
    return [false, 0]
  end

  count = 0
  content = File.read(filename)
  content.gsub!(from) { count += 1; to }
  if count > 0
    File.write(filename, content)
    puts "Processing #{filename}    (#{count} matches)"
  end

  return [true, count]
end

def build_regexp(from)
  query_option = 0
  if @opts[:regexp]
    query_str = from
  else
    query_str = Regexp.escape(from)
  end
  if @opts[:word]
    query_str = "\\b#{query_str}\\b"
  end
  if @opts[:ignore_case]
    query_option |= Regexp::IGNORECASE
  end
  return Regexp.new(query_str, query_option)
end

def main
  @opts = {}

  opt = OptionParser.new
  opt.banner = USAGE
  opt.on("-i", "--ignore-case", "大文字小文字を区別しない") {|v| @opts[:ignore_case] = true; }
  opt.on("-r", "--regexp", "正規表現で検索する") {|v| @opts[:regexp] = true }
  opt.on("-w", "--word", "単語にマッチ") {|v| @opts[:word] = true; }
  opt.parse!(ARGV)

  if ARGV.length < 2
    puts opt.help
    exit 1
  end

  from = ARGV[0]
  to = ARGV[1]
  filenames = if ARGV.length == 2
                `git ls-files`.split("\n")
              else
                ARGV[2..-1]
              end

  processed_count = 0
  skipped_count = 0
  total_match_count = 0

  from_re = build_regexp(from)

  puts "Search: #{from_re.inspect}"
  puts

  filenames.each do |filename|
    is_processed, match_count = rpl(filename, from_re, to)
    if is_processed
      processed_count += 1
    else
      skipped_count += 1
    end
    total_match_count += match_count
  end

  puts
  puts "#{filenames.length} files (processed: #{processed_count} / skipped: #{skipped_count}) Total #{total_match_count} matches"
end

main
