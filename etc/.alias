# vim: set ts=4 sts=4 sw=4 et ft=sh: 
# bashとzsh共通のalias

alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ,='pushd +1 > /dev/null'
alias ,,='pushd +2 > /dev/null'
alias ,,,='pushd +3 > /dev/null'
alias ,,,,='pushd +4 > /dev/null'
alias ag='ag --follow'
alias bg=' bg'
alias com='command'
alias cp='cp -i'
alias fd='fd --color never'
alias fg=' fg'
alias gdb='gdb --quiet -ex start'
alias gti='git'
alias gosh='rlwrap --histsize 10000 -q "\"" --break-chars "(){}[].,#@;|\`\"" -f . -f ~/.vim/dict/schemedict.txt --complete-filenames gosh'
alias j='jobs -l'
alias la='ls -a'
# ls
case "$OSTYPE" in
    *bsd*)
        alias ls='ls -AG'
        ;;
    *darwin*)
        alias ls='ls -AG'
        ;;
    *)
        alias ls='ls --color=auto'
        ;;
esac
alias ll='ls -lrth'
alias mdpreview='grip'
alias markdownpreview='grip'
alias pt='pt --color-match="1;31" --follow'
alias colorcat='pygmentize -g -f console256 -O style=emacs'
alias r='$DOT/bin/r'
alias rm='gomi'
alias rst='exec $SHELL -l'
alias sc='screen -X eval "chdir $PWD"; screen'
alias tf='tail -f -n 500'
alias vi='vim'
alias vil='vim --cmd "set t_ti= t_te=" -c "nnoremap q :q!<CR>" -c "set buftype=nofile nonumber wrap laststatus=1" -c "nunmap <C-p>"  -'
alias vissh='vi ~/.ssh/config'
alias wget='wget --no-check-certificate --content-disposition'

read_n_char() {
    if [ -n "$ZSH_VERSION" ]; then
        read -k "$@"
    elif [ -n "$BASH_VERSION" ]; then
        read -n "$@"
    fi
}

z() {
    if [ $# -eq 1 ]; then
        apack "$1.zip" "$1"
    else
        apack "$@"
    fi
}

uz() {
    if [ "$1" = -d ]; then
        local delete_archive=1
        shift
    fi
    if [ $# -ne 1 ]; then
        echo "Usage: $0 [-d] <archive>"
        return 1
    fi
    archive="$1"

    local tmp=$(mktemp)
    LANG=C aunpack "$@" 2>&1 | tee "$tmp"
    [[ ${pipestatus[1]} != 0 && ${PIPESTATUS[0]} != 0 ]] && return 1
    local dirname=$(tail -n 1 "$tmp" | perl -ne "/extracted to \`(.*)'/ && print \$1")

    if [ "$delete_archive" = 1 ]; then
        command rm -f "$archive"
        echo "Removed $archive"
    fi

    command rm -f "$tmp"
    chpwd_functions= builtin cd "$dirname"
}

# 環境変数を表示する
p() {
    env | sort | grep -v $'^[ \t]' | grep -i "^$1" | less
}

awsenv() {
    local rbpath="$DOT/bin/awsenv.rb"
    if [ "$1" = "" ]; then
        ruby "$rbpath"
    else
        local commands=$(ruby "$rbpath" "$@")
        if [ "$commands" != "" ]; then
            eval "$commands"
            if [ -t 1 ]; then
                ruby "$rbpath"
            fi
        fi
    fi
}

diff() {
    if [ -t 1 ]; then
        command diff --color=always "$@" | less
        return $pipestatus[1]
    else
        command diff "$@"
    fi
}

ghc() {
    which stack > /dev/null
    if [ $? = 0 ]; then
        stack --verbosity silent ghc -- -O "$@"
    else
        command ghc "$@"
    fi
    command rm *.hi *.o
}

ghci() {
    which stack > /dev/null
    if [ $? = 0 ]; then
        stack --verbosity silent ghci -- "$@"
    else
        command ghci "$@"
    fi
}

is_screen() {
  case "$TERM" in
    *screen*)
      return 0
      ;;
    *)
      return 1
      ;;
  esac
}

jq() {
    if [ -t 1 ]; then
        OPT="-C"
    else
        OPT=""
    fi
    if [ "$1" = "" ]; then
        set -- .
    fi
    command jq $OPT "$@" | less
}

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;197m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;129m' \
    man "$@"
}

md() {
    mkdir -p "$1" && cd "$1"
}

l() {
    if [ ! -t 0 ]; then
        less "$@"
    elif [ -d "$1" ]; then
        ls -lrt "$@"
    elif [ -f "$1" -o $# -ge 2 ]; then
        less "$@"
    else
        ls -lrt
    fi
}

# 任意のコマンドをlessでページング対応させる関数
pagerize() {
    local cmd="$1"
    shift
    local src="
    $cmd() {
        if [ -t 1 ]; then
            command $cmd \"\$@\" | less -F
            case "$SHELL" in
                *bash*)
                    return ${PIPESTATUS[0]}
                    ;;
                *zsh*)
                    return $pipestatus[1]
                    ;;
            esac
        else
            command $cmd \"\$@\"
        fi
    }
"
    eval "$src"
}

pagerize find
pagerize locate
pagerize readelf
pagerize xxd

. $DOT/bin/pathmunge

ps() {
    if [ $# = 0 ]; then
        case "$OSTYPE" in
            *linux*)
                command ps axfo user,pid,pgid,tty,ni,rss,vsz,stat,wchan=WIDE-WCHAN-COLUMN,start,args
                ;;
            *)
                command ps axo user,pid,pgid,tty,ni,rss,vsz,stat,start,args
                ;;
        esac
    else
        command ps "$@"
    fi
}

runghc() {
    which stack > /dev/null
    if [ $? = 0 ]; then
        stack --verbosity silent runghc -- "$@"
    else
        command runghc -- "$@"
    fi
}

svn() {
    if [ -t 1 -a "$1" = "ci" -o "$1" = "pe" ]; then
        command svn "$@"
    else
        FORCE_COLOR=true command svn "$@" | less -F
    fi
}

tree() {
    command tree -C "$@" | less
}

tt() {
    if [ -t 1 ]; then
        local root=$(pjroot)
        if [ "$root" != "not exist" -a "$root" != "$PWD" ]; then
            cd $(pjroot)
        fi
    else
        pjroot
    fi
}

xf() {
    if [ -t 1 ]; then
        xmllint --format - > /tmp/xf.$$ && vil < /tmp/xf.$$
    else
        xmllint --format -
    fi
}

BMDIR=~/bm

bmhelp() {
    cat <<EOF
Usage:
    bm add .            -- Bookmark current directory
    bm add . hoge       -- Bookmark current directory as 'hoge'
    bm ls               -- List bookmarks
    bm rm hoge          -- Remove bookmark 'hoge'
EOF
    return $1
}

bm() {
    if [ ! -d "$BMDIR" ]; then
        mkdir -p "$BMDIR"
    fi

    case "$1" in
        add)
            if [ "$2" = "" ]; then
                bmhelp 1
                return
            fi
            TARGET=`realpath "$2"`
            if [ "$3" =  "" ]; then
                BASENAME=`basename "$TARGET"`
                BMNAME="$BASENAME"
            else
                BMNAME="$3"
            fi
            LINK_PATH="$BMDIR"/"$BMNAME"
            [ -L "$LINK_PATH" ] && command rm "$LINK_PATH"
            ln -sv "$TARGET" "$LINK_PATH"
            ;;
        ls)
            ls -l "$BMDIR"
            ;;
        rm)
            if [ "$2" != "" ]; then
                rm -v "$BMDIR/$2"
            fi
            ;;
        "")
            bmhelp
            ;;
        *)
            if [ -L "$BMDIR/$1" ]; then
                cd "$BMDIR/$1"
            else
                bmhelp 1
            fi
            ;;
    esac
}

get_color256() {
    local colornum="$1"
    local attr="${2:-normal}"
    local fgbg="${3:-fg}"
    if [ "$fgbg" = "fg" ]; then
        a=38
    else
        a=48
    fi

    if [ "$attr" = "normal" ]; then
        printf "\x1b[$a;5;%sm" $colornum
    else
        printf "\x1b[1;$a;5;%sm" $colornum
    fi
} 

# 手順書等にコピペしやすい形式でコマンド履歴を表示する
fcl() {
    if [ "$1" = "-n" ]; then    # 行頭の $ を削除する
        fc -ln -30 | sed -e $'s@^[0-9]*[ \t]*@@'
    else
        fc -ln -30 | sed -e $'s@^[0-9]*[ \t]*@$ @'
    fi
}

# cheat <コマンド名> でコマンドの典型的な使用例を表示する
cheat() {
    local keyword=${1:-:list}
    curl -s "cheat.sh/$keyword?style=xcode" | less
}

# https://transfer.sh/
transfer() {
    if [ $# -eq 0 ]; then
        echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md";
        return 1;
    fi 
    tmpfile=$( mktemp -t transferXXX )
    if tty -s; then
        basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g')
        curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile
    else
        curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile
    fi
    cat $tmpfile; echo; command rm -f $tmpfile;
}
