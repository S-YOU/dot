# マシン固有の設定は
# ~/.gitconfig.local
# に書くこと

[user]
	name = Aoyama, Shotaro
	email = aosho235@gmail.com
#[http]
#	proxy = http://example.co.jp:8080
#[https]
#	proxy = http://example.co.jp:8080
#[url "https://"]
#	insteadOf = git://
[alias]
	ba = for-each-ref --sort=committerdate refs/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	ci = commit
	co = checkout
	exec = !sh -c 'exec "$@"' $(which sh)
	sti = status --short --branch --ignored
	ls = ls-files
	cancel-previous-commit = reset HEAD~1
	# カレントブランチをoriginにプッシュする
	push-origin = !git push --set-upstream origin `git symbolic-ref --short HEAD`
	unstage = reset HEAD
	modify-history = rebase -i HEAD~6
	zip = !git archive --format=zip --prefix=$(basename $(git exec pwd))/ HEAD > $(basename $(git exec pwd))-$(git symbolic-ref --short HEAD).zip
	# mergeやreset --hardのとき、変更を破棄する
	assume-unchanged = update-index --assume-unchanged 
	no-assume-unchanged = update-index --no-assume-unchanged 
	alias = !git config --get-regexp ^alias\\. | sort
	tag-by-date = log --tags --simplify-by-decoration --pretty='format:%ai %Cred%h%Creset %d %s'
	# mergeやreset --hardのとき、変更を破棄しない
	skip-worktree = update-index --skip-worktree
	no-skip-worktree = update-index --no-skip-worktree
	skipped = !git ls-files -v | grep --color '^[Shs]'
	# git rmせずに普通にrmしちゃったファイルたちを一括でgit rmする
	rm-files = !git rm `git ls-files --deleted`
	commit-count = rev-list --count HEAD
	# タグをつけるには
	# git tag v1.0
	# git tag-by-date
	# git push origin --tags
	shallow-clone = clone --depth 1
	sc = clone --depth 1
	# マージされているブランチをリモートから削除する
	remove-unused-branches = !git branch -r --merged | grep -v master | sed 's/origin\\///' | xargs -n 1 git push --delete origin
	vimdiff = difftool --tool=vimdiff --prompt
	dt      = difftool --tool=vimdiff --prompt
	# 追跡されていないファイルを削除するには
	# git clean -n    # dry run  .gitignoreされているファイルは含めない
	# git clean -f    # execute  
	# git clean -dn   # dry run  .gitignoreされているファイルを含める
	# git clean -df   # execute
[merge]
	tool = vimdiff
[credential]
	# https://でパスワード入力を一定時間キャッシュする
	helper = cache --timeout=86400
[push]
	default = simple
[core]
	# 自分だけのgitignore
	excludesfile = ~/.gitignore
[log]
	#date = relative
#[format]
	#pretty = format:"%ai (%ar) %Cred%H%Creset %an%n%N%n    %s%n"
[color]
	# 標準出力がパイプされていてもカラー表示する
	ui = auto
[fetch]
	prune = true
[color "diff"]
	meta = blue bold
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[mergetool]
	prompt = false
[init]
	templatedir = ~/.git_template
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[include]
	path = .gitconfig.local
