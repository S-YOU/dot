# gdb-dashboardに依存しない設定ファイル

# カレントディレクトリの.gdbinitを読み込む
set auto-load local-gdbinit
set auto-load safe-path /
# まだシンボルが読み込まれていない状態でブレークポイントを張ることを許す
set breakpoint pending on
# listコマンドで表示する行数
set listsize 30
# TUIでASCIIによる罫線表示（UTF-8の罫線文字を使うと画面が乱れるため）
set tui border-kind ascii

# http://0xcc.net/blog/archives/000126.html
set history save on
set history size 10000
set history filename ~/.gdb_history

# 構造体を見やすく表示
set print pretty on
# C++のstaticメンバをpコマンドで表示しない
set print static-members off
# 配列を表示するとき、そのインデックスも表示する
set print array-indexes on
# 配列の要素を全て表示する
set print elements 0
# C++でオブジェクトを宣言された型でなく、実際の型で表示する
set print object on

alias a = advance
alias im = info macro
alias w = disp
alias uw = undisp

define ib
    set logging file /tmp/gdb-ib.tmp
    set logging redirect 
    set logging overwrite on
    set logging on
    info b
    set logging off
    shell gdb-ib < /tmp/gdb-ib.tmp && rm /tmp/gdb-ib.tmp
end
document ib
# info bの結果に色をつける
end

define ed
    edit *$pc
end
document ed
# 現在行を指定してエディタを起動する。
end

define locals
    echo [args] ---------------------------\n
    info args
    echo [locals] -------------------------\n
    info local
end
document locals
# 関数の引数とローカル変数を表示する。
end

define pp
    print * $arg0
end
document pp
# ポインタが指す先のデータをprintする
end

# https://stackoverflow.com/a/34485939/5209556
define xxd
    if $argc == 1
        set $count = 64
    else
        set $count = $arg1
    end
    dump binary memory /tmp/dump.bin $arg0 ((char*)$arg0)+$count
    eval "shell xxd-o %p /tmp/dump.bin", $arg0
end
document xxd
# xxdに似た形式でメモリを16進ダンプする。
# 例：xxd &argc 10
end

# listコマンドの改良
define l
    set logging file /tmp/gdb-l.tmp
    set logging redirect 
    set logging overwrite on
    set logging on
    frame
    if $argc == 1
        list $arg0
    else
        list *$pc
    end
    set logging off
    shell expand -t ${GDB_TABSIZE:-4} /tmp/gdb-l.tmp | gdb-l && rm /tmp/gdb-l.tmp
end
document l
# listコマンドの改良。カレント行を反転表示する。
end

define sb
    # 「warning: Nothing to save.」を抑制するため
    set logging file /dev/null
    set logging redirect on
    set logging on
    shell rm -f .breakpoints
    save breakpoints .breakpoints
    set logging off
end
document sb
# ブレークポイントをファイルに保存する
end

define lb
    source .breakpoints
end
document lb
# 保存しておいたブレークポイントを読み込む
end

# 停止する度に実行されるフック
define hook-stop
    ### gdb dashboardを使っていないとき有効化する
    #l
end

define hookpost-enable
    ib
end

define hookpost-disable
    ib
end

# 終了時に確認しない
define hook-quit
    set confirm off
end

# 終了前にブレークポイントを保存する
define hook-quit
    sb
end

# 保存しておいたブレークポイントを読み込む
lb


## GDBの使い方
# https://www.evernote.com/shard/s211/nl/22440320/a615f211-aeef-4b80-b075-70ff2592d6c8
